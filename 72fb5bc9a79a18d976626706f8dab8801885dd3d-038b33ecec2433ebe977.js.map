{"version":3,"file":"72fb5bc9a79a18d976626706f8dab8801885dd3d-038b33ecec2433ebe977.js","mappings":"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","sources":["webpack://adnan-alam-portfolio/./src/components/layout.js","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","webpack://adnan-alam-portfolio/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://adnan-alam-portfolio/./node_modules/react-icons/lib/iconsManifest.mjs","webpack://adnan-alam-portfolio/./node_modules/react-icons/lib/iconContext.mjs","webpack://adnan-alam-portfolio/./node_modules/react-icons/lib/iconBase.mjs"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { useLocation } from \"@reach/router\"\nimport { FaGithub, FaLinkedin, FaTwitter, FaBars, FaTimes, FaHome, FaUser, FaProjectDiagram, FaCogs, FaBlog, FaEnvelope, FaPhone, FaMapMarkerAlt, FaArrowUp } from \"react-icons/fa\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [hideNav, setHideNav] = useState(false)\n  const [lastScrollY, setLastScrollY] = useState(0)\n  const [showBackToTop, setShowBackToTop] = useState(false)\n  const location = useLocation()\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY\n\n      if (currentScrollY > lastScrollY) {\n        setHideNav(true)\n      } else {\n        setHideNav(false)\n      }\n\n      if (currentScrollY > 300) {\n        setShowBackToTop(true)\n      } else {\n        setShowBackToTop(false)\n      }\n\n      setLastScrollY(currentScrollY)\n    }\n\n    window.addEventListener('scroll', handleScroll, { passive: true })\n\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [lastScrollY])\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    })\n  }\n\n  const menuItems = [\n    { path: \"/\", label: \"Home\", icon: FaHome },\n    { path: \"/about\", label: \"About\", icon: FaUser },\n    { path: \"/projects\", label: \"Projects\", icon: FaProjectDiagram },\n    { path: \"/services\", label: \"Services\", icon: FaCogs },\n    { path: \"/blog\", label: \"Blog\", icon: FaBlog },\n    { path: \"/contact\", label: \"Contact\", icon: FaEnvelope },\n  ]\n\n  const socialLinks = [\n    { icon: FaGithub, url: \"https://github.com/adnanalam04\" },\n    { icon: FaLinkedin, url: \"https://linkedin.com/in/adnanalam04\" },\n    { icon: FaTwitter, url: \"https://twitter.com/addyy04\" },\n  ]\n\n  const Footer = () => (\n    <footer className={`footer ${location.pathname === \"/\" ? \"footer-home\" : \"footer-minimal\"}`}>\n      <div className=\"container\">\n        {location.pathname === \"/\" && (\n          <div className=\"footer-content\">\n            <div className=\"footer-section\">\n              <h3 className=\"footer-title\">Contact</h3>\n              <p><FaEnvelope className=\"footer-icon\" /> contact@adnanalam.com</p>\n              <p><FaPhone className=\"footer-icon\" /> +91 8178756228</p>\n              <p><FaMapMarkerAlt className=\"footer-icon\" /> New Delhi, India</p>\n            </div>\n            <div className=\"footer-section\">\n              <h3 className=\"footer-title\">Connect</h3>\n              <div className=\"footer-social\">\n                {socialLinks.map((link, index) => (\n                  <a key={index} href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <link.icon />\n                  </a>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"footer-credit\">\n          <p>Designed and developed with <span className=\"heart\">❤️</span> by Adnan Alam</p>\n        </div>\n      </div>\n    </footer>\n  )\n\n  return (\n    <>\n      <header className={`header ${hideNav ? 'hide' : ''}`}>\n        <div className=\"container\">\n          <Link to=\"/\" className=\"logo\">\n            Adnan's Portfolio\n          </Link>\n          <nav className={`nav ${isOpen ? \"open\" : \"\"}`}>\n            {menuItems.map((item, index) => (\n              <motion.div\n                key={item.path}\n                initial={{ opacity: 0, y: -20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n              >\n                <Link to={item.path} activeClassName=\"active\">\n                  <item.icon className=\"nav-icon\" />\n                  <span className=\"nav-text\">{item.label}</span>\n                </Link>\n              </motion.div>\n            ))}\n          </nav>\n          <motion.button \n            className=\"menu-toggle\" \n            onClick={() => setIsOpen(!isOpen)}\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            {isOpen ? <FaTimes /> : <FaBars />}\n          </motion.button>\n        </div>\n      </header>\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            className=\"mobile-menu\"\n            initial={{ x: \"100%\" }}\n            animate={{ x: 0 }}\n            exit={{ x: \"100%\" }}\n            transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n          >\n            {menuItems.map((item, index) => (\n              <motion.div\n                key={item.path}\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: index * 0.1 }}\n              >\n                <Link to={item.path} activeClassName=\"active\" onClick={() => setIsOpen(false)}>\n                  <item.icon className=\"nav-icon\" />\n                  <span className=\"nav-text\">{item.label}</span>\n                </Link>\n              </motion.div>\n            ))}\n          </motion.div>\n        )}\n      </AnimatePresence>\n      <main>\n        <div className=\"page-content\">\n          {children}\n        </div>\n      </main>\n      <Footer />\n      <AnimatePresence>\n        {showBackToTop && (\n          <motion.button\n            className=\"back-to-top\"\n            onClick={scrollToTop}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n          >\n            <FaArrowUp />\n          </motion.button>\n        )}\n      </AnimatePresence>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? [Math.random()] : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = presentChildren === renderedChildren ||\n                presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.19\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.19 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.19\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","export var IconsManifest = [\n  {\n    \"id\": \"ci\",\n    \"name\": \"Circum Icons\",\n    \"projectUrl\": \"https://circumicons.com/\",\n    \"license\": \"MPL-2.0 license\",\n    \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome 5\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"fa6\",\n    \"name\": \"Font Awesome 6\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"lu\",\n    \"name\": \"Lucide\",\n    \"projectUrl\": \"https://lucide.dev/\",\n    \"license\": \"ISC\",\n    \"licenseUrl\": \"https://github.com/lucide-icons/lucide/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"hi2\",\n    \"name\": \"Heroicons 2\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"sl\",\n    \"name\": \"Simple Line Icons\",\n    \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"tb\",\n    \"name\": \"Tabler Icons\",\n    \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"tfi\",\n    \"name\": \"Themify Icons\",\n    \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n  },\n  {\n    \"id\": \"rx\",\n    \"name\": \"Radix Icons\",\n    \"projectUrl\": \"https://icons.radix-ui.com\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"pi\",\n    \"name\": \"Phosphor Icons\",\n    \"projectUrl\": \"https://github.com/phosphor-icons/core\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/phosphor-icons/core/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"lia\",\n    \"name\": \"Icons8 Line Awesome\",\n    \"projectUrl\": \"https://icons8.com/line-awesome\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/icons8/line-awesome/blob/master/LICENSE.md\"\n  }\n]","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && /*#__PURE__*/React.createContext(DefaultContext);","var _excluded = [\"attr\", \"size\", \"title\"];\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext.mjs\";\nfunction Tree2Element(tree) {\n  return tree && tree.map((node, i) => /*#__PURE__*/React.createElement(node.tag, _objectSpread({\n    key: i\n  }, node.attr), Tree2Element(node.child)));\n}\nexport function GenIcon(data) {\n  return props => /*#__PURE__*/React.createElement(IconBase, _extends({\n    attr: _objectSpread({}, data.attr)\n  }, props), Tree2Element(data.child));\n}\nexport function IconBase(props) {\n  var elem = conf => {\n    var {\n        attr,\n        size,\n        title\n      } = props,\n      svgProps = _objectWithoutProperties(props, _excluded);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return /*#__PURE__*/React.createElement(\"svg\", _extends({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: _objectSpread(_objectSpread({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && /*#__PURE__*/React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? /*#__PURE__*/React.createElement(IconContext.Consumer, null, conf => elem(conf)) : elem(DefaultContext);\n}"],"names":["_ref","children","isOpen","setIsOpen","useState","hideNav","setHideNav","lastScrollY","setLastScrollY","showBackToTop","setShowBackToTop","location","useLocation","useStaticQuery","useEffect","handleScroll","currentScrollY","window","scrollY","addEventListener","passive","removeEventListener","menuItems","path","label","icon","FaHome","FaUser","FaProjectDiagram","FaCogs","FaBlog","FaEnvelope","socialLinks","FaGithub","url","FaLinkedin","FaTwitter","Footer","React","className","pathname","FaPhone","FaMapMarkerAlt","map","link","index","key","href","target","rel","Link","to","item","motion","div","initial","opacity","y","animate","transition","duration","delay","activeClassName","button","onClick","whileHover","scale","whileTap","FaTimes","FaBars","AnimatePresence","x","exit","type","stiffness","damping","scrollToTop","scrollTo","top","behavior","FaArrowUp","acceleratedValues","Set","underDampedSpring","restSpeed","keyframesTransition","ease","getDefaultTransition","valueKey","keyframes","length","transform","has","startsWith","Math","sqrt","instantAnimationState","isNotNull","value","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","undefined","memo","callback","result","isAnimatable","name","Array","isArray","complex","test","BaseAnimation","constructor","autoplay","repeatDelay","options","this","isStopped","hasAttemptedResolve","updateFinishedPromise","resolved","_resolved","onKeyframesResolved","velocity","onComplete","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","current","i","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","max","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","pow","f","g","initialGuess","rootIterations","approximateRoot","isNaN","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","origin","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","backOut","backIn","reverse","backInOut","mirror","easingLookup","linear","circIn","circInOut","circOut","anticipate","p","easingDefinitionToFunction","definition","x1","y1","x2","y2","hueToRgb","q","mixImmediate","mixLinearColor","from","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","color","find","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber","getMixer","mixComplex","mixArray","mixObject","output","numValues","blendValue","template","createTransformer","originStats","targetStats","indexes","var","number","values","mixVisibility","pipe","_a","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","mixers","customMixer","mixerFactory","numMixers","easingFunction","push","createMixers","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","easing","splice","frameloopDriver","update","passTimestamp","timestamp","start","stop","now","isProcessing","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","KeyframeResolver","KeyframeResolver$1","super","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","resolver","cancel","teardown","onStop","motionValue","onResolved","owner","resolveKeyframes","scheduleResolve","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","time","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Object","hasOwnProperty","call","Element","prototype","AcceleratedAnimation","DOMKeyframesResolver","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","element","valueName","keyframeOptions","fill","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","set","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","getProps","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","forEach","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","getVelocity","shouldSkip","skipAnimations","get","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","visualElement","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","getValue","latestValues","valueTarget","HandoffAppearAnimations","appearId","shouldReduceMotion","animateVariant","variant","presenceContext","custom","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","when","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","optimizedAppearDataAttribute","getOptimisedAppearId","isKeyframesTarget","isTransitionDefined","_delay","getValueTransition","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","props","childRef","isPresent","sizeRef","height","offsetHeight","width","offsetWidth","offsetTop","left","offsetLeft","componentDidUpdate","render","PopChild","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","onExitComplete","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","context","useMemo","childId","isComplete","register","delete","random","_","PresenceContext","Provider","Map","getChildKey","onlyElements","filtered","Children","isValidElement","exitBeforeEnter","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","renderedChildren","setRenderedChildren","includes","join","exitingChildren","nextChildren","forceRender","LayoutGroupContext","L","Fragment","isEveryExitComplete","isExitComplete","createContext","transformPagePoint","isStatic","reducedMotion","acos","mirrorEasing","reverseEasing","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","keepAlive","immediate","queue","add","process","frameData","clear","createRenderStep","read","preRender","postRender","processBatch","useManualTiming","performance","frame","cancelFrame","requestAnimationFrame","clearTime","queueMicrotask","splitCSSVariableRegex","getVariableValue","depth","token","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","trim","parseFloat","invalidTemplates","unresolvedKeyframes","readKeyframes","keyframe","resolveNoneKeyframes","originType","targetType","needsMeasurement","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","MotionContext","LazyContext","strict","microtask","cancelMicrotask","isRefObject","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","createVisualElement","ProjectionNodeConstructor","parent","lazyContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","createProjectionNode","wantsHandoff","HandoffComplete","updateFeatures","animateChanges","completeHandoff","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","featureProps","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","indexOf","scaleCorrectors","isForcedMotionValue","translateAlias","z","transformPerspective","numTransforms","getValueAsType","buildHTMLStyles","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","default","transformIsDefault","transformString","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderHTML","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","liveStyle","willChange","applyWillChange","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","addWillChange","memberName","forEachDefinition","list","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","isPrimaryPointer","event","pointerType","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","arguments","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createState","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileDrag","whileFocus","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","prevIsPresent","prevPresenceContext","exitAnimation","distance","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","createDelta","createBox","eachAxis","convertBoundingBoxToBox","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","_b","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","addValue","hasValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","camelToDash","str","replace","checkStringStartsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","translateX","translateY","getAnimatableNone","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","dimensionValueTypes","vw","vh","findDimensionValueType","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","translateZ","perspective","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","testValueType","transformPropOrder","transformProps","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","readAllKeyframes","flushKeyframeResolvers","isAsync","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","resolveVariant","getValueState","resolveVariantFromProps","setMotionValue","setTarget","MotionGlobalConfig","addUniqueItem","removeItem","warning","invariant","isBrowser","isNumericalString","isZeroValueString","any","combineFunctions","transformers","toFromDifference","isCustomValue","resolveFinalValueInKeyframes","SubscriptionManager","subscriptions","numSubscriptions","getSize","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","useConstant","init","useIsomorphicLayoutEffect","useLayoutEffect","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","isColorString","testProp","splitColor","aName","bName","cName","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","parsedValue","parseComplexValue","numSections","convertNumbersToZero","parsed","transformer","createUnitType","endsWith","degrees","progressPercentage","sanitize","floatRegex","colorRegex","singleColorRegex","isString","isNullish","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","isWillChangeMotionValue","getWillChangeName","isMotionValue","DefaultContext","attr","IconContext","_excluded","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_extends","bind","apply","ownKeys","getOwnPropertyDescriptor","enumerable","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","toPrimitive","TypeError","String","Number","_toPrimitive","configurable","writable","Tree2Element","tree","GenIcon","data","IconBase","elem","conf","title","svgProps","computedSize","strokeWidth","xmlns","Consumer"],"sourceRoot":""}